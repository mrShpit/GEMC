<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" x:Name="MainPostWindow" x:Class="GEMC.MainWindow"
        Title="MainWindow" 
        Height="600" Width="1200" 
        MinHeight="600" MinWidth="1200" 
        Loaded="Window_Loaded" ResizeMode="CanResizeWithGrip" WindowStyle="None" AllowsTransparency="True"
        MouseLeftButtonDown="DragPanel_MouseLeftButtonDown"
        Icon="pack://application:,,,/Resources/Letter G blue.ico">
    <Window.Resources>

        <SolidColorBrush x:Key="StyleColor" Color="#FF356092"/>

        <SolidColorBrush x:Key="BackColor" Color="White"/>

        <ControlTemplate x:Key="CloseButtonTemplate" TargetType="{x:Type Button}">

            <Grid x:Name="GridButt" Background="White"  >
                <ContentPresenter x:Name="Content" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="GridButt" Property="Background" Value="Red"/>
                    <Setter  Property="Foreground" Value="White"/>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="TextButtonTemplate" TargetType="{x:Type Button}" >

            <Border x:Name="BorderButt" BorderThickness="1" BorderBrush="{DynamicResource BackColor}">
                <Grid x:Name="GridButt" Background="{DynamicResource BackColor}">
                    <ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </Border>

            <ControlTemplate.Triggers>


                <EventTrigger RoutedEvent="UIElement.MouseLeave">

                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation From="Yellow" To="#FFF1F1F1" Duration="0:0:0.3" Storyboard.TargetName="GridButt" Storyboard.TargetProperty="Background.Color"/>
                        </Storyboard>
                    </BeginStoryboard>

                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation From="Orange" To="#FFF1F1F1" Duration="0:0:0.3" Storyboard.TargetName="BorderButt" Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>
                    </BeginStoryboard>

                </EventTrigger>

                <EventTrigger RoutedEvent="UIElement.MouseEnter">

                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation From="#FFF1F1F1" To="Yellow" Duration="0:0:0.3" Storyboard.TargetName="GridButt" Storyboard.TargetProperty="Background.Color"/>
                        </Storyboard>
                    </BeginStoryboard>

                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation From="#FFF1F1F1" To="Orange" Duration="0:0:0.3" Storyboard.TargetName="BorderButt" Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>
                    </BeginStoryboard>

                </EventTrigger>

                <Trigger Property="IsMouseOver" Value="false">
                    <Setter  Property="Foreground" Value="Black"/>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="SimpleButtonTemplate" TargetType="{x:Type Button}">

            <Grid x:Name="GridButt" Background="White" >
                <Border  BorderThickness="1" BorderBrush="Black">
                    <Border BorderThickness="1" BorderBrush="White">
                        <ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </Border>
            </Grid>

            <ControlTemplate.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation From="White" To="LightBlue" Duration="0:0:0.3" Storyboard.TargetName="GridButt" Storyboard.TargetProperty="Background.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation From="LightBlue" To="White" Duration="0:0:0.3" Storyboard.TargetName="GridButt" Storyboard.TargetProperty="Background.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ImageButton" TargetType="{x:Type Button}">
            <Grid Name="BackGrid" Height="61">
                <DockPanel HorizontalAlignment="Center">
                    <Image Name="pic"
                    DockPanel.Dock="Top"
                    Margin="5" Width="auto" Height="40" 
                    Source="{TemplateBinding Tag}"
                    />
                    <ContentPresenter DockPanel.Dock="Top" HorizontalAlignment="Center" Height="15" Margin="0,-7,0,0"/>
                </DockPanel>
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="BackGrid" Property="Background" Value="#FF4A6D97"/>
                </Trigger>
            </ControlTemplate.Triggers>

        </ControlTemplate>

        <ControlTemplate x:Key="LittleImageButton" TargetType="{x:Type Button}">
            <Border Name="BackBorder" CornerRadius="7">
                <DockPanel HorizontalAlignment="Center">
                    <Image Name="pic"
                    DockPanel.Dock="Top"
                    Margin="5" Width="30" Height="auto" 
                    Source="{TemplateBinding Tag}"
                    />
                </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="BackBorder" Property="Background" Value="#FF4A6D97"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


    </Window.Resources>

    <Border BorderThickness="1" BorderBrush="LightGray">

        <Grid  x:Name="DragPanel"  Background="{DynamicResource BackColor}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" >
                <Rectangle Fill="Black" Opacity="0.6" >
                    <Rectangle.Effect>
                        <BlurEffect Radius="17"/>
                    </Rectangle.Effect>
                </Rectangle>

                <StackPanel Background="#FF1F497D" Orientation="Vertical">
                    <Grid DockPanel.Dock="Top" Height="30" Background="#FF173461"/>

                    <Button Content="Создать" Foreground="White"
                            Template="{StaticResource ImageButton}"
                            Click="btAddProfile_Click">
                        <Button.Tag>
                            <ImageSource>pack://application:,,,/Resources/userIcon.png</ImageSource>
                        </Button.Tag>
                    </Button>

                    <Button Margin="0,3,0,0" Content="Затянуть" Foreground="White"
                            Template="{StaticResource ImageButton}"
                            Click="btGetMail_Click">
                        <Button.Tag>
                            <ImageSource>pack://application:,,,/Resources/getMailIcon.png</ImageSource>
                        </Button.Tag>
                    </Button>

                    <Button Margin="0,3,0,0" Content="Написать" Foreground="White"
                            Template="{StaticResource ImageButton}"
                            Click="btSendLetter_Click">
                        <Button.Tag>
                            <ImageSource>pack://application:,,,/Resources/letterIcon.png</ImageSource>
                        </Button.Tag>
                    </Button>

                    <Separator Height="2" Background="White" Margin="5"/>

                    <Button Content="Опции" Foreground="White"
                            Template="{StaticResource ImageButton}">
                        <Button.Tag>
                            <ImageSource>pack://application:,,,/Resources/gearIcon.png</ImageSource>
                        </Button.Tag>
                    </Button>

                    <Button Content="Помощь" Foreground="White"
                            Template="{StaticResource ImageButton}">
                        <Button.Tag>
                            <ImageSource>pack://application:,,,/Resources/helpIcon.png</ImageSource>
                        </Button.Tag>
                    </Button>

                    <Separator Height="2" Background="White" Margin="5"/>

                    <Border/>

                </StackPanel>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" >
                    <Rectangle Fill="Black" Opacity="0.5" >
                        <Rectangle.Effect>
                            <BlurEffect Radius="15"/>
                        </Rectangle.Effect>
                    </Rectangle>

                    <DockPanel x:Name="MenuPanel" LastChildFill="true" Background="White">
                        <Button x:Name="btClose" Width="30" VerticalAlignment="Stretch" DockPanel.Dock="Right"  
                            FontSize="17" Content="×" Template="{StaticResource CloseButtonTemplate}" Click="btClose_Click"/>
                        <Button x:Name="btMinimize" Width="30" VerticalAlignment="Stretch" DockPanel.Dock="Right"  
                            FontSize="17" Content="_" Template="{StaticResource CloseButtonTemplate}" Click="btMinimize_Click"/>
                        <Grid VerticalAlignment="Stretch" DockPanel.Dock="Right" Height="28" Margin="0,0,15,0">

                            <ComboBox Width ="140" x:Name="SearchBox" Background="White"  Foreground="Gray"
                                      Margin="0,3,0,0" Height="22" VerticalAlignment="Top" >

                                <ComboBox.Resources>
                                    <SolidColorBrush x:Key="StyleColor" Color="#FF3998D6"/>
                                </ComboBox.Resources>

                                <ComboBoxItem  Height="20" VerticalContentAlignment="Center" Content="Собеседники" Foreground="Black"/>
                                <Separator Background="Black" Margin="-5,0,-5,0"/>
                                <ComboBoxItem  Height="20" VerticalContentAlignment="Center" Content="Тема письма" Foreground="Black"/>

                            </ComboBox>

                            <TextBox Name="tbSearch" Margin="0,3,22,3" KeyDown="tbSearch_KeyDown" >
                                <TextBox.Style>
                                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                    <Style.Resources>
                                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                            <VisualBrush.Visual>
                                                <Label Name="SearchLabel" Foreground="LightGray" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Style.Resources>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="True">
                                            <Setter Property="Background" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                </TextBox.Style>
                            </TextBox>
                            
                        </Grid>
                        <Border Background="White"/>
                    </DockPanel>
                </Grid>



                <Grid Grid.Row="2">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="340" MaxWidth="500"/>
                        <ColumnDefinition MinWidth="580"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0">
                        <TreeView Name="tvMain" ItemsSource="{Binding ProfList}" Margin="10"
                                   ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  BorderThickness="0" SelectedItemChanged="tvMain_SelectedItemChanged"
                                  >

                            <TreeView.ItemTemplate>

                                <HierarchicalDataTemplate ItemsSource="{Binding ProxyMailFolders}">

                                    <Border Margin="4" Name="ItemBorder" CornerRadius="7" PreviewMouseRightButtonDown="ItemBorder_PreviewMouseRightButtonDown">
                                        <Border.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Name="miEdit" Height="25" Header="Редактировать" Click="miEdit_Click"/>
                                                <MenuItem Name="miDelete" Height="25" Header="Удалить" Click="miDelete_Click"/>
                                            </ContextMenu>
                                        </Border.ContextMenu>

                                        <Grid  Name="ItemGrid" Height="40"
                                           Width="{Binding RelativeSource={RelativeSource AncestorType= {x:Type TreeView}, AncestorLevel=1}, Path=ActualWidth}"
                                           >

                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0">

                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="140"/>
                                                    <ColumnDefinition MinWidth="180"/>
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Name="tbName" Grid.Column="0" FontSize="15" FontWeight="Bold" 
                                                           Foreground="Black" Text="{Binding Name}" 
                                                       VerticalAlignment="Bottom" Margin="10,0,0,0"/>
                                                <TextBlock Name="tbAdress" Grid.Column="1" FontSize="14" 
                                                           Foreground="Black" Text="{Binding Adress}"
                                                       VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,30,0"/>
                                            </Grid>

                                            <Grid Grid.Row="1">
                                                <TextBlock Name="tbDate" Grid.Column="0" FontSize="12" 
                                                           Foreground="Black" Text="{Binding LastTimeChecked}" 
                                                       VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,30,0"/>
                                            </Grid>

                                        </Grid>
                                    </Border>

                                    <HierarchicalDataTemplate.Triggers>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                                  Path=IsMouseOver}" Value="True"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                                  Path=IsSelected}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ItemBorder" Property="Background" Value="#ffe5f3fb"/>
                                            <Setter TargetName="ItemBorder" Property="BorderBrush" Value="#ffa5d7f0"/>
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                                  Path=IsSelected}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource ResourceKey=StyleColor}"/>
                                            <Setter TargetName="tbName" Property="Foreground" Value="White"/>
                                            <Setter TargetName="tbAdress" Property="Foreground" Value="White"/>
                                            <Setter TargetName="tbDate" Property="Foreground" Value="White"/>

                                        </MultiDataTrigger>
                                    </HierarchicalDataTemplate.Triggers>

                                    <HierarchicalDataTemplate.ItemTemplate>

                                        <DataTemplate>
                                            <Border Name="ItemBorder2" CornerRadius="6">
                                                <Grid Name="ItemGrid2" Height="30" 
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType= {x:Type TreeView}, AncestorLevel=1}, Path=ActualWidth}" 
                                                  >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition MinWidth="140"/>
                                                        <ColumnDefinition Width="70"/>
                                                    </Grid.ColumnDefinitions>

                                                    <TextBlock Name="tbListName" Grid.Column="0" Text="{Binding listName}"
                                                               VerticalAlignment="Center" FontSize="13" Margin="10,0,0,0"/>
                                                    <TextBlock Name="tbCount" Grid.Column="1" Text="{Binding listItemsCount}" 
                                                               VerticalAlignment="Center" FontSize="13"/>
                                                </Grid>
                                            </Border>

                                            <DataTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                                  Path=IsMouseOver}" Value="True"/>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                                  Path=IsSelected}" Value="False"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter TargetName="ItemBorder2" Property="Background" Value="#ffe5f3fb"/>
                                                    <Setter TargetName="ItemBorder2" Property="BorderBrush" Value="#ffa5d7f0"/>
                                                </MultiDataTrigger>

                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                                  Path=IsSelected}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter TargetName="ItemBorder2" Property="Background" Value="{DynamicResource ResourceKey=StyleColor}"/>
                                                    <Setter TargetName="tbListName" Property="Foreground" Value="White"/>
                                                    <Setter TargetName="tbCount" Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>

                                            </DataTemplate.Triggers>

                                        </DataTemplate>
                                    </HierarchicalDataTemplate.ItemTemplate>

                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>

                            <TreeView.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                    Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                    Color="Transparent" />
                            </TreeView.Resources>

                        </TreeView>
                    </Grid>

                    <GridSplitter Height="Auto"  Grid.Column="0" Margin="0,20,0,20" VerticalAlignment="Stretch" Width="5" 
                              HorizontalAlignment="Right"  Background="#FFF0EEF1"/>

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Name="rowMailBoxWorkPanel" Height="auto" MaxHeight="57"/>
                            <RowDefinition Name="rowMailBox" MinHeight="200"/>
                            <RowDefinition Name="rowletterTab" MinHeight="50" MaxHeight="450"/>
                            <RowDefinition x:Name="rowLetterWorkPlace" Height="auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" x:Name="MailDesk" Height="0" VerticalAlignment="Top" Margin="8,15,15,0" >
                            <Border BorderBrush="Black" Background="{DynamicResource ResourceKey=StyleColor}" 
                                    BorderThickness="1" CornerRadius="7">
                                <DockPanel LastChildFill="true">
                                    <Button x:Name="btDelete" Template="{StaticResource LittleImageButton}" 
                                            Click="btDelete_Click" DockPanel.Dock="Right">
                                        <Button.Tag>
                                            <ImageSource>pack://application:,,,/Resources/trash.png</ImageSource>
                                        </Button.Tag>
                                    </Button>

                                    <Button x:Name="btSpam" Template="{StaticResource LittleImageButton}" 
                                            Click="btSpam_Click" DockPanel.Dock="Right">
                                        <Button.Tag>
                                            <ImageSource>pack://application:,,,/Resources/spam.png</ImageSource>
                                        </Button.Tag>
                                    </Button>
                                    <Border/>
                                </DockPanel>
                            </Border>
                        </Grid>

                        <ListBox x:Name="lbMailBox" Grid.Row="1" Margin="8,1,15,4" BorderThickness="0"
						SelectionChanged="lbMailBox_SelectionChanged" >
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Margin" Value="1"/>
                                    <Setter Property="Height" Value="30" />

                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush>
                                                <GradientStop Color="#FF94ABC7" Offset="0.0"/>
                                                <GradientStop Color="#ffe5f3fb" Offset="0.0"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>

                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">

                                                <Grid x:Name="lbMailGrid" Background="{TemplateBinding Background}" >

                                                    <DockPanel Margin="5,0,0,0">
                                                        <CheckBox x:Name="checkBox" DockPanel.Dock="Left" 
                                                        IsChecked="{Binding IsChecked, Mode=TwoWay}" VerticalAlignment="Center" Margin="0,0,5,0"/>

                                                        <TextBlock FontSize="14" DockPanel.Dock="Left" Width="200" Margin="0,0,5,0"
														FontWeight="Bold" Text="{Binding Interlocutor, Mode=TwoWay}" 
														VerticalAlignment="Center" />

                                                        <TextBlock FontSize="14" DockPanel.Dock="Left" Width="180" Margin="0,0,5,0"
														Text="{Binding SubjectPreview}"      
														VerticalAlignment="Center"/>

                                                        <TextBlock FontSize="13" DockPanel.Dock="Right" Width="140"
														Text="{Binding SendTime, Mode=TwoWay}"     
														HorizontalAlignment="Right" VerticalAlignment="Center"
														TextWrapping="Wrap"  />
                                                        <Border/>
                                                    </DockPanel>
                                                </Grid>

                                                <ControlTemplate.Triggers>

                                                    <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation 
																Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[1].(GradientStop.Offset)"
																From="0" To="1.5" Duration="0:0:0.2"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>

                                                    <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation 
																Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[1].(GradientStop.Offset)"
																From="1" To="0" Duration="0:0:0.1"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>

                                                </ControlTemplate.Triggers>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>

                        <GridSplitter Name="splitLetterBox" Opacity="0" Width="Auto"  Grid.Row="1" Margin="5,5,5,-4" 
						HorizontalAlignment="Stretch" Height="5" VerticalAlignment="Bottom"  
						Background="#FFF0EEF1"/>

                        <TabControl Grid.Row="2" x:Name ="tabLetterBox" Margin="8,6,15,6"
                                BorderThickness="2" Background="White" Opacity="0"
                                    BorderBrush="{DynamicResource ResourceKey=StyleColor}" MouseDown="tabLetterBox_MouseDown"  >
                            <TabControl.ContentTemplate>
                                <DataTemplate>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <Grid>
                                            <ContentControl Content="{Binding Body}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </DataTemplate>
                            </TabControl.ContentTemplate>

                            <TabControl.Resources>

                                <Style TargetType="{x:Type TabItem}" >
                                    <Setter Property="Template">
                                        <Setter.Value>

                                            <ControlTemplate TargetType="{x:Type TabItem}" >

                                                <Grid>
                                                    <Grid x:Name="Panel" >
                                                        <Border x:Name="Border" 
													Background="White"
													CornerRadius="9,9,9,0"
													HorizontalAlignment="Stretch"
													BorderBrush="{DynamicResource ResourceKey=StyleColor}"
													BorderThickness="2"
													Margin="2">

                                                            <Border x:Name="Border2" 
														BorderThickness="1" 
														BorderBrush="White"
														CornerRadius="7,7,7,0"
														HorizontalAlignment="Stretch">

                                                                <TextBlock Text="{Binding SubjectPreview}" Margin="4">
                                                                </TextBlock>

                                                            </Border>
                                                        </Border>

                                                    </Grid>

                                                </Grid>

                                                <ControlTemplate.Triggers>

                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter TargetName="Border" Property="Background" Value="White"/>
                                                        <Setter TargetName="Border" Property="CornerRadius" Value="7,7,0,0"/>
                                                        <Setter TargetName="Border" Property="BorderThickness" Value="2,2,2,0"/>
                                                        <Setter TargetName="Border" Property="Margin" Value="0,0,0,-3"/>

                                                        <Setter TargetName="Border2" Property="Background" Value="White"/>
                                                        <Setter TargetName="Border2" Property="CornerRadius" Value="9,9,0,0"/>
                                                        <Setter TargetName="Border2" Property="BorderThickness" Value="0"/>

                                                    </Trigger>

                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="false"/>
                                                            <Condition Property="IsMouseOver" Value="true"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="Border" Property="Background" Value="#ffe5f3fb"/>
                                                    </MultiTrigger>
                                                </ControlTemplate.Triggers>

                                            </ControlTemplate>

                                        </Setter.Value>
                                    </Setter>
                                </Style>

                            </TabControl.Resources>

                        </TabControl>

                        <Grid Grid.Row="3" x:Name="LetterReplyDesk" Margin="8,-5,15,15" 
                          Height="0" VerticalAlignment="Bottom">
                            <Border BorderBrush="Black" BorderThickness="1" 
                                    CornerRadius="7" Background="{DynamicResource ResourceKey=StyleColor}" >
                                <DockPanel LastChildFill="true">

                                    <Button Content="Ответ" Template="{StaticResource SimpleButtonTemplate}" DockPanel.Dock="Left" Width="70" Margin ="10,5,5,5" Height="30"/>
                                    <Button Content="Переслать" Template="{StaticResource SimpleButtonTemplate}" DockPanel.Dock="Left" Width="70" Margin ="10,5,5,5" Height="30"/>
                                    <Button x:Name="btCloseAllTabs" Content="Закрыть все" 
									Template="{StaticResource SimpleButtonTemplate}" DockPanel.Dock="Right" 
									Width="80" Margin ="10,5,5,5" Height="30" Click="btCloseAllTabs_Click" />
                                    <Border/>
                                    <Button x:Name="btCloseTab" Content="Закрыть" 
									Template="{StaticResource SimpleButtonTemplate}" DockPanel.Dock="Right" 
									Width="70" Margin ="10,5,5,5" Height="30" Click="btCloseTab_Click"/>
                                    <Border/>
                                </DockPanel>
                            </Border>
                        </Grid>

                    </Grid>

                </Grid>

            </Grid>

        </Grid>
    </Border>

</Window>